<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.0//EN" "report.dtd"><report name="javabean-tester"><sessioninfo id="BitfenixGhost-93ba67f" start="1436495704803" dump="1436495705188"/><sessioninfo id="BitfenixGhost-af3a3aae" start="1436496522763" dump="1436496523144"/><package name="com/codebox/bean"><class name="com/codebox/bean/JavaBeanTester"><method name="&lt;init&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equalsHashCodeToStringSymmetricTest" desc="(Ljava/lang/Class;Ljava/lang/Class;Lcom/codebox/enums/LoadData;)V" line="80"><counter type="INSTRUCTION" missed="1" covered="159"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="1" covered="43"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equalsTests" desc="(Ljava/lang/Object;Ljava/lang/Object;Lcom/codebox/enums/LoadData;)V" line="181"><counter type="INSTRUCTION" missed="84" covered="136"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="10" covered="25"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="load" desc="(Ljava/lang/Class;Ljava/lang/Object;Lcom/codebox/enums/LoadData;[Ljava/lang/String;)V" line="272"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="(Ljava/lang/Class;Ljava/lang/Class;Lcom/codebox/enums/CanEquals;Lcom/codebox/enums/LoadData;[Ljava/lang/String;)V" line="305"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildMockValue" desc="(Ljava/lang/Class;)Ljava/lang/Object;" line="321"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildValue" desc="(Ljava/lang/Class;Lcom/codebox/enums/LoadData;Lcom/codebox/enums/LoadType;)Ljava/lang/Object;" line="352"><counter type="INSTRUCTION" missed="18" covered="106"/><counter type="BRANCH" missed="1" covered="24"/><counter type="LINE" missed="3" covered="28"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getterSetterTests" desc="(Ljava/lang/Class;Ljava/lang/Object;Lcom/codebox/enums/LoadData;[Ljava/lang/String;)V" line="434"><counter type="INSTRUCTION" missed="84" covered="104"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="10" covered="18"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAlternateValues" desc="(Ljava/lang/Class;)Ljava/lang/Object;" line="497"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNullValues" desc="(Ljava/lang/Class;)Ljava/lang/Object;" line="511"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setStandardValues" desc="(Ljava/lang/Class;)Ljava/lang/Object;" line="524"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValues" desc="(Ljava/lang/Class;Ljava/lang/String;ILjava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Long;Ljava/lang/Double;Ljava/lang/Float;Ljava/lang/Character;Ljava/lang/Byte;)Ljava/lang/Object;" line="558"><counter type="INSTRUCTION" missed="0" covered="126"/><counter type="BRANCH" missed="0" covered="60"/><counter type="LINE" missed="0" covered="33"/><counter type="COMPLEXITY" missed="0" covered="31"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="190" covered="707"/><counter type="BRANCH" missed="7" covered="128"/><counter type="LINE" missed="26" covered="159"/><counter type="COMPLEXITY" missed="8" covered="72"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/codebox/bean/JavaBeanTester$1"><method name="&lt;clinit&gt;" desc="()V" line="378"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="JavaBeanTester.java"><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="2"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="7" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="2"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="7" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="2"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="2"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="2"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="2"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="8" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="7" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="2"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="7" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="2"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="1" ci="0" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="0" cb="2"/><line nr="182" mi="0" ci="8" mb="0" cb="0"/><line nr="184" mi="0" ci="7" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="0"/><line nr="188" mi="0" ci="16" mb="0" cb="2"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="1" cb="3"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="9" mb="2" cb="2"/><line nr="202" mi="0" ci="6" mb="0" cb="0"/><line nr="205" mi="0" ci="5" mb="0" cb="0"/><line nr="208" mi="0" ci="10" mb="0" cb="0"/><line nr="211" mi="0" ci="4" mb="0" cb="2"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="0" ci="5" mb="0" cb="0"/><line nr="221" mi="0" ci="10" mb="0" cb="0"/><line nr="224" mi="0" ci="4" mb="0" cb="2"/><line nr="225" mi="0" ci="4" mb="0" cb="0"/><line nr="227" mi="0" ci="3" mb="0" cb="0"/><line nr="231" mi="0" ci="10" mb="0" cb="0"/><line nr="233" mi="1" ci="0" mb="0" cb="0"/><line nr="234" mi="15" ci="0" mb="0" cb="0"/><line nr="236" mi="1" ci="0" mb="0" cb="0"/><line nr="237" mi="15" ci="0" mb="0" cb="0"/><line nr="239" mi="1" ci="0" mb="0" cb="0"/><line nr="240" mi="15" ci="0" mb="0" cb="0"/><line nr="242" mi="1" ci="0" mb="0" cb="0"/><line nr="243" mi="15" ci="0" mb="0" cb="0"/><line nr="245" mi="1" ci="0" mb="0" cb="0"/><line nr="246" mi="15" ci="0" mb="0" cb="0"/><line nr="248" mi="4" ci="1" mb="0" cb="0"/><line nr="252" mi="0" ci="1" mb="0" cb="0"/><line nr="272" mi="0" ci="5" mb="0" cb="0"/><line nr="273" mi="0" ci="1" mb="0" cb="0"/><line nr="305" mi="0" ci="6" mb="0" cb="0"/><line nr="306" mi="0" ci="3" mb="0" cb="2"/><line nr="307" mi="0" ci="4" mb="0" cb="0"/><line nr="309" mi="0" ci="1" mb="0" cb="0"/><line nr="321" mi="0" ci="4" mb="0" cb="2"/><line nr="323" mi="0" ci="2" mb="0" cb="0"/><line nr="325" mi="0" ci="2" mb="0" cb="0"/><line nr="352" mi="0" ci="3" mb="0" cb="0"/><line nr="353" mi="0" ci="2" mb="1" cb="1"/><line nr="354" mi="2" ci="0" mb="0" cb="0"/><line nr="358" mi="0" ci="3" mb="0" cb="0"/><line nr="359" mi="0" ci="16" mb="0" cb="2"/><line nr="360" mi="0" ci="7" mb="0" cb="4"/><line nr="361" mi="0" ci="3" mb="0" cb="2"/><line nr="364" mi="0" ci="7" mb="0" cb="0"/><line nr="365" mi="1" ci="0" mb="0" cb="0"/><line nr="366" mi="15" ci="0" mb="0" cb="0"/><line nr="368" mi="0" ci="1" mb="0" cb="0"/><line nr="369" mi="0" ci="2" mb="0" cb="0"/><line nr="372" mi="0" ci="5" mb="0" cb="0"/><line nr="377" mi="0" ci="2" mb="0" cb="0"/><line nr="378" mi="2" ci="22" mb="0" cb="3"/><line nr="380" mi="0" ci="3" mb="0" cb="0"/><line nr="381" mi="0" ci="1" mb="0" cb="0"/><line nr="383" mi="0" ci="3" mb="0" cb="0"/><line nr="384" mi="0" ci="1" mb="0" cb="0"/><line nr="386" mi="0" ci="3" mb="0" cb="0"/><line nr="389" mi="0" ci="5" mb="0" cb="4"/><line nr="390" mi="0" ci="2" mb="0" cb="0"/><line nr="392" mi="0" ci="4" mb="0" cb="2"/><line nr="393" mi="0" ci="4" mb="0" cb="0"/><line nr="395" mi="0" ci="4" mb="0" cb="2"/><line nr="396" mi="0" ci="4" mb="0" cb="0"/><line nr="398" mi="0" ci="4" mb="0" cb="2"/><line nr="399" mi="0" ci="4" mb="0" cb="0"/><line nr="401" mi="0" ci="3" mb="0" cb="2"/><line nr="402" mi="0" ci="3" mb="0" cb="0"/><line nr="412" mi="0" ci="2" mb="0" cb="0"/><line nr="434" mi="0" ci="4" mb="0" cb="0"/><line nr="435" mi="0" ci="16" mb="0" cb="2"/><line nr="437" mi="0" ci="16" mb="0" cb="2"/><line nr="438" mi="0" ci="5" mb="0" cb="2"/><line nr="439" mi="0" ci="1" mb="0" cb="0"/><line nr="442" mi="0" ci="3" mb="0" cb="0"/><line nr="443" mi="0" ci="3" mb="0" cb="0"/><line nr="445" mi="0" ci="4" mb="1" cb="3"/><line nr="447" mi="0" ci="3" mb="0" cb="0"/><line nr="448" mi="0" ci="3" mb="0" cb="0"/><line nr="450" mi="0" ci="9" mb="2" cb="2"/><line nr="455" mi="0" ci="5" mb="0" cb="0"/><line nr="458" mi="0" ci="10" mb="0" cb="0"/><line nr="460" mi="0" ci="2" mb="0" cb="0"/><line nr="461" mi="0" ci="6" mb="0" cb="0"/><line nr="463" mi="0" ci="12" mb="0" cb="0"/><line nr="466" mi="1" ci="0" mb="0" cb="0"/><line nr="467" mi="15" ci="0" mb="0" cb="0"/><line nr="469" mi="1" ci="0" mb="0" cb="0"/><line nr="470" mi="15" ci="0" mb="0" cb="0"/><line nr="472" mi="1" ci="0" mb="0" cb="0"/><line nr="473" mi="15" ci="0" mb="0" cb="0"/><line nr="475" mi="1" ci="0" mb="0" cb="0"/><line nr="476" mi="15" ci="0" mb="0" cb="0"/><line nr="478" mi="1" ci="0" mb="0" cb="0"/><line nr="479" mi="15" ci="0" mb="0" cb="0"/><line nr="481" mi="4" ci="1" mb="0" cb="0"/><line nr="485" mi="0" ci="1" mb="0" cb="0"/><line nr="497" mi="0" ci="18" mb="0" cb="0"/><line nr="511" mi="0" ci="12" mb="0" cb="0"/><line nr="524" mi="0" ci="18" mb="0" cb="0"/><line nr="558" mi="0" ci="3" mb="0" cb="2"/><line nr="559" mi="0" ci="2" mb="0" cb="0"/><line nr="560" mi="0" ci="3" mb="0" cb="2"/><line nr="561" mi="0" ci="5" mb="0" cb="0"/><line nr="562" mi="0" ci="6" mb="0" cb="4"/><line nr="563" mi="0" ci="5" mb="0" cb="4"/><line nr="564" mi="0" ci="2" mb="0" cb="0"/><line nr="566" mi="0" ci="2" mb="0" cb="0"/><line nr="567" mi="0" ci="6" mb="0" cb="4"/><line nr="568" mi="0" ci="5" mb="0" cb="4"/><line nr="569" mi="0" ci="3" mb="0" cb="0"/><line nr="571" mi="0" ci="2" mb="0" cb="0"/><line nr="572" mi="0" ci="6" mb="0" cb="4"/><line nr="573" mi="0" ci="5" mb="0" cb="4"/><line nr="574" mi="0" ci="3" mb="0" cb="0"/><line nr="576" mi="0" ci="2" mb="0" cb="0"/><line nr="577" mi="0" ci="6" mb="0" cb="4"/><line nr="578" mi="0" ci="5" mb="0" cb="4"/><line nr="579" mi="0" ci="3" mb="0" cb="0"/><line nr="581" mi="0" ci="2" mb="0" cb="0"/><line nr="582" mi="0" ci="6" mb="0" cb="4"/><line nr="583" mi="0" ci="5" mb="0" cb="4"/><line nr="584" mi="0" ci="3" mb="0" cb="0"/><line nr="586" mi="0" ci="2" mb="0" cb="0"/><line nr="587" mi="0" ci="6" mb="0" cb="4"/><line nr="588" mi="0" ci="5" mb="0" cb="4"/><line nr="589" mi="0" ci="3" mb="0" cb="0"/><line nr="591" mi="0" ci="2" mb="0" cb="0"/><line nr="592" mi="0" ci="6" mb="0" cb="4"/><line nr="593" mi="0" ci="5" mb="0" cb="4"/><line nr="594" mi="0" ci="3" mb="0" cb="0"/><line nr="596" mi="0" ci="2" mb="0" cb="0"/><line nr="598" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="192" covered="724"/><counter type="BRANCH" missed="7" covered="128"/><counter type="LINE" missed="26" covered="159"/><counter type="COMPLEXITY" missed="8" covered="73"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="192" covered="724"/><counter type="BRANCH" missed="7" covered="128"/><counter type="LINE" missed="26" covered="159"/><counter type="COMPLEXITY" missed="8" covered="73"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="2"/></package><package name="com/codebox/enums"><class name="com/codebox/enums/LoadType"><method name="values" desc="()[Lcom/codebox/enums/LoadType;" line="20"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lcom/codebox/enums/LoadType;" line="20"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="20"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="43"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/codebox/enums/LoadData"><method name="values" desc="()[Lcom/codebox/enums/LoadData;" line="20"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lcom/codebox/enums/LoadData;" line="20"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="20"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="29"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/codebox/enums/CanEquals"><method name="values" desc="()[Lcom/codebox/enums/CanEquals;" line="20"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lcom/codebox/enums/CanEquals;" line="20"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="20"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="29"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="LoadType.java"><line nr="20" mi="5" ci="25" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><line nr="29" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="43"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LoadData.java"><line nr="20" mi="9" ci="17" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="29"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CanEquals.java"><line nr="20" mi="9" ci="17" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="29"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="23" covered="101"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="5" covered="7"/><counter type="CLASS" missed="0" covered="3"/></package><counter type="INSTRUCTION" missed="215" covered="825"/><counter type="BRANCH" missed="7" covered="128"/><counter type="LINE" missed="26" covered="169"/><counter type="COMPLEXITY" missed="13" covered="80"/><counter type="METHOD" missed="6" covered="19"/><counter type="CLASS" missed="0" covered="5"/></report>